{
  "contractName": "Agenda",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "citas",
      "outputs": [
        {
          "internalType": "string",
          "name": "contenido",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contenido",
          "type": "string"
        }
      ],
      "name": "crearCita",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"citas\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"contenido\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contenido\",\"type\":\"string\"}],\"name\":\"crearCita\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Agenda.sol\":\"Agenda\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Agenda.sol\":{\"keccak256\":\"0x966d9b8bea369cc3360cbbe5a4eb76f920ed0fdc046ce65e6a78f7ddfc255592\",\"urls\":[\"bzz-raw://dd10ab4dd7e773b72cdd6388072f1096f395abfb4354a9132cde877a9b17e2aa\",\"dweb:/ipfs/QmR86KG8w2mJcVoATyNmm99e9sNi8eGTnzuHPQxNcG16o8\"]}},\"version\":1}",
  "bytecode": "0x60806040526000805534801561001457600080fd5b5061034a806100246000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063af640d0f14610046578063e5384c4214610060578063f6652a6714610108575b600080fd5b61004e61019a565b60408051918252519081900360200190f35b6101066004803603602081101561007657600080fd5b81019060208101813564010000000081111561009157600080fd5b8201836020820111156100a357600080fd5b803590602001918460018302840111640100000000831117156100c557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101a0945050505050565b005b6101256004803603602081101561011e57600080fd5b50356101de565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015f578181015183820152602001610147565b50505050905090810190601f16801561018c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60005481565b600080546001908101808355604080516020808201835286825292855292825290922081518051929391926101d8928492019061027a565b50505050565b60016020818152600092835260409283902080548451600294821615610100026000190190911693909304601f81018390048302840183019094528383529283918301828280156102705780601f1061024557610100808354040283529160200191610270565b820191906000526020600020905b81548152906001019060200180831161025357829003601f168201915b5050505050905081565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102bb57805160ff19168380011785556102e8565b828001600101855582156102e8579182015b828111156102e85782518255916020019190600101906102cd565b506102f49291506102f8565b5090565b61031291905b808211156102f457600081556001016102fe565b9056fea265627a7a7231582076000cf05bfe982af31401d58444161a57a73d49e03a75fbf3e330a30580e6c464736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063af640d0f14610046578063e5384c4214610060578063f6652a6714610108575b600080fd5b61004e61019a565b60408051918252519081900360200190f35b6101066004803603602081101561007657600080fd5b81019060208101813564010000000081111561009157600080fd5b8201836020820111156100a357600080fd5b803590602001918460018302840111640100000000831117156100c557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101a0945050505050565b005b6101256004803603602081101561011e57600080fd5b50356101de565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015f578181015183820152602001610147565b50505050905090810190601f16801561018c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60005481565b600080546001908101808355604080516020808201835286825292855292825290922081518051929391926101d8928492019061027a565b50505050565b60016020818152600092835260409283902080548451600294821615610100026000190190911693909304601f81018390048302840183019094528383529283918301828280156102705780601f1061024557610100808354040283529160200191610270565b820191906000526020600020905b81548152906001019060200180831161025357829003601f168201915b5050505050905081565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102bb57805160ff19168380011785556102e8565b828001600101855582156102e8579182015b828111156102e85782518255916020019190600101906102cd565b506102f49291506102f8565b5090565b61031291905b808211156102f457600081556001016102fe565b9056fea265627a7a7231582076000cf05bfe982af31401d58444161a57a73d49e03a75fbf3e330a30580e6c464736f6c63430005100032",
  "sourceMap": "27:291:0:-;;;66:1;51:16;;27:291;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:291:0;;;;;;;",
  "deployedSourceMap": "27:291:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:291:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51:16;;;:::i;:::-;;;;;;;;;;;;;;;;191:124;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;191:124:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;191:124:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;191:124:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;191:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;191:124:0;;-1:-1:-1;191:124:0;;-1:-1:-1;;;;;191:124:0:i;:::-;;141:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;141:41:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;141:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51:16;;;;:::o;191:124::-;258:2;:5;;;;;;;;;285:22;;;;;;;;;;;;274:9;;;;;;;;;:33;;;;285:22;;274:9;;:33;;:9;;:33;;;:::i;:::-;-1:-1:-1;;;;191:124:0:o;141:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;141:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;27:291::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27:291:0;;;-1:-1:-1;27:291:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\ncontract Agenda\r\n{\r\n    uint public id=0;\r\n\r\n    struct Appointment\r\n    {\r\n        string contenido;\r\n    }\r\n    mapping(uint => Appointment) public citas;\r\n\r\n    function crearCita(string memory contenido) public\r\n    {\r\n        id ++;\r\n        citas[id]= Appointment(contenido);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\ville\\Desktop\\Cripto-Proyecto-Final\\IDStudio\\contracts\\Agenda.sol",
  "ast": {
    "absolutePath": "project:/contracts/Agenda.sol",
    "exportedSymbols": {
      "Agenda": [
        29
      ]
    },
    "id": 30,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 29,
        "linearizedBaseContracts": [
          29
        ],
        "name": "Agenda",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "id",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "51:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "51:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "66:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Agenda.Appointment",
            "id": 7,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "contenido",
                "nodeType": "VariableDeclaration",
                "scope": 7,
                "src": "111:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "111:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Appointment",
            "nodeType": "StructDefinition",
            "scope": 29,
            "src": "76:59:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "citas",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "141:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Appointment_$7_storage_$",
              "typeString": "mapping(uint256 => struct Agenda.Appointment)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "149:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "141:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Appointment_$7_storage_$",
                "typeString": "mapping(uint256 => struct Agenda.Appointment)"
              },
              "valueType": {
                "contractScope": null,
                "id": 9,
                "name": "Appointment",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7,
                "src": "157:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Appointment_$7_storage_ptr",
                  "typeString": "struct Agenda.Appointment"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "247:68:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "258:5:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 16,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "258:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "258:5:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "citas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "274:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Appointment_$7_storage_$",
                          "typeString": "mapping(uint256 => struct Agenda.Appointment storage ref)"
                        }
                      },
                      "id": 21,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 20,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "280:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "274:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Appointment_$7_storage",
                        "typeString": "struct Agenda.Appointment storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23,
                          "name": "contenido",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "297:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 22,
                        "name": "Appointment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "285:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Appointment_$7_storage_ptr_$",
                          "typeString": "type(struct Agenda.Appointment storage pointer)"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "285:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Appointment_$7_memory",
                        "typeString": "struct Agenda.Appointment memory"
                      }
                    },
                    "src": "274:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Appointment_$7_storage",
                      "typeString": "struct Agenda.Appointment storage ref"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "274:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 28,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "crearCita",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "name": "contenido",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "210:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "210:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "209:25:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "247:0:0"
            },
            "scope": 29,
            "src": "191:124:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 30,
        "src": "27:291:0"
      }
    ],
    "src": "0:318:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Agenda.sol",
      "exportedSymbols": {
        "Agenda": [
          29
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            29
          ],
          "name": "Agenda",
          "scope": 30
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "id",
              "scope": 29,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 2,
                "name": "ElementaryTypeName",
                "src": "51:4:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 3,
                "name": "Literal",
                "src": "66:1:0"
              }
            ],
            "id": 4,
            "name": "VariableDeclaration",
            "src": "51:16:0"
          },
          {
            "attributes": {
              "canonicalName": "Agenda.Appointment",
              "name": "Appointment",
              "scope": 29,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "contenido",
                  "scope": 7,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 5,
                    "name": "ElementaryTypeName",
                    "src": "111:6:0"
                  }
                ],
                "id": 6,
                "name": "VariableDeclaration",
                "src": "111:16:0"
              }
            ],
            "id": 7,
            "name": "StructDefinition",
            "src": "76:59:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "citas",
              "scope": 29,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct Agenda.Appointment)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct Agenda.Appointment)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "149:4:0"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Appointment",
                      "referencedDeclaration": 7,
                      "type": "struct Agenda.Appointment"
                    },
                    "id": 9,
                    "name": "UserDefinedTypeName",
                    "src": "157:11:0"
                  }
                ],
                "id": 10,
                "name": "Mapping",
                "src": "141:28:0"
              }
            ],
            "id": 11,
            "name": "VariableDeclaration",
            "src": "141:41:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "crearCita",
              "scope": 29,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "contenido",
                      "scope": 28,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 12,
                        "name": "ElementaryTypeName",
                        "src": "210:6:0"
                      }
                    ],
                    "id": 13,
                    "name": "VariableDeclaration",
                    "src": "210:23:0"
                  }
                ],
                "id": 14,
                "name": "ParameterList",
                "src": "209:25:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 15,
                "name": "ParameterList",
                "src": "247:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4,
                              "type": "uint256",
                              "value": "id"
                            },
                            "id": 16,
                            "name": "Identifier",
                            "src": "258:2:0"
                          }
                        ],
                        "id": 17,
                        "name": "UnaryOperation",
                        "src": "258:5:0"
                      }
                    ],
                    "id": 18,
                    "name": "ExpressionStatement",
                    "src": "258:5:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Agenda.Appointment storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Agenda.Appointment storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "mapping(uint256 => struct Agenda.Appointment storage ref)",
                                  "value": "citas"
                                },
                                "id": 19,
                                "name": "Identifier",
                                "src": "274:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4,
                                  "type": "uint256",
                                  "value": "id"
                                },
                                "id": 20,
                                "name": "Identifier",
                                "src": "280:2:0"
                              }
                            ],
                            "id": 21,
                            "name": "IndexAccess",
                            "src": "274:9:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct Agenda.Appointment memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7,
                                  "type": "type(struct Agenda.Appointment storage pointer)",
                                  "value": "Appointment"
                                },
                                "id": 22,
                                "name": "Identifier",
                                "src": "285:11:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "string memory",
                                  "value": "contenido"
                                },
                                "id": 23,
                                "name": "Identifier",
                                "src": "297:9:0"
                              }
                            ],
                            "id": 24,
                            "name": "FunctionCall",
                            "src": "285:22:0"
                          }
                        ],
                        "id": 25,
                        "name": "Assignment",
                        "src": "274:33:0"
                      }
                    ],
                    "id": 26,
                    "name": "ExpressionStatement",
                    "src": "274:33:0"
                  }
                ],
                "id": 27,
                "name": "Block",
                "src": "247:68:0"
              }
            ],
            "id": 28,
            "name": "FunctionDefinition",
            "src": "191:124:0"
          }
        ],
        "id": 29,
        "name": "ContractDefinition",
        "src": "27:291:0"
      }
    ],
    "id": 30,
    "name": "SourceUnit",
    "src": "0:318:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x58A15A399782aBa97Ad326d0aa708dc55Dd0BFEA",
      "transactionHash": "0xc34cb6085884b127ed3b8b5aaf6f0f168db4b38e4372c5131980af6c753753af"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-08T15:23:24.279Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}